# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# ß
# If the above line is not correctly displayed, fix your editor first!

# CONFIGURATION FOR PY3STATUS!

general {
    interval            = 5
    separator           = false
    separator_block_width = 0
    colors              = true
    #markup             = "pango"
    #border             = "#AA3131"
    color_good          = "#a89984"
    color_degraded      = "#7B7B7B"
    color_yellow        = "#FFD866"
    color_orange        = "#FC9867"
    color_bad           = "#FF6188"
    color_blood         = "#AA3131"
    color_standardcolor = "#1D2021"
    color_networkcolor  = "#155558"
    color_playercolor   = "#596A15"
    color_soundcolor    = "#2C2C2C"
}

order += "frame urgent_maintenance"
frame urgent_maintenance {
    # display following blocks only if condition is true
    #background = 'standardcolor'
    #format_separator = ' '
    #format_separator = '·'
    format_separator = ' '

    # display diskio read, write, etc
    conky diskio {
        format = '[\?if=diskio.sda>8000000 [' # 8000000 is 1Mb?
        format += 'IO '
        format += '[\?color=darkgray&show sda] '
        format += '[\?color=lightskyblue '
        format += '{diskio_read sda}/{diskio_write sda} '
        format += '({diskio sda})]]'
        format += '|]'
        #config
        config = {
            'update_interval': 5,             # update interval for conky
            'format_human_readable': true,    # if False, print in bytes
            'short_units': true,              # shortens units, eg kiB->k, GiB->G
            'uppercase': true,                # upper placeholders
        }
    }

    # display top 1 cpu (+mem_res) process
    conky top_cpu {
        format = '[\?if=top.cpu.1>9 ['     # 12.0 is 12.00%
        format += 'TC '
        format += '[\?color=darkgray '
        format += '{top name 1} '
        format += '[\?color=DodgerBlue {top pid 1}] '
        format += '[\?color=deepskyblue {top mem_res 1}] '
        format += '[\?color=lightskyblue {top cpu 1}%]]]'
        format += '|]'
        #config
        config = {
            'update_interval': 5,             # update interval for conky
            'format_human_readable': true,    # if False, print in bytes
            'short_units': true,              # shortens units, eg kiB->k, GiB->G
        }
    }

    # TODO: fix if condition
    # display top 1 memory process
    conky top_mem {
        format = '[\?if=top_mem.mem.1>5 [' # 8.0 is 8.00%??? Currently doesn't work as expected
        format += 'TM '
        format += '[\?color=darkgray '
        format += '{top_mem name 1} '
        format += '[\?color=yellowgreen {top_mem mem_res 1}] '
        format += '[\?color=lightgreen {top_mem mem 1}%]]]'
        format += '|]'
        #config
        config = {
            'update_interval': 5,             # update interval for conky
            'format_human_readable': true,    # if False, print in bytes
            'short_units': true,              # shortens units, eg kiB->k, GiB->G
        }
    }

    # display memperc, memory, thresholds
    conky memory {
        format = '[\?if=memperc>40.0 ['
        format += 'RAM '
        format += '[[\?color=memperc {memperc}%] '
        format += '[\?color=mem {mem}/]'
        format += '[\?color=lightblue {memmax}]]]'
        format += '|]'
        thresholds = [
            (0, 'good'), (35, 'yellow'),
            (55, 'orange'), (85, 'bad')
        ]
        #config
        config = {
            'update_interval': 5,             # update interval for conky
            'format_human_readable': true,    # if False, print in bytes
            'short_units': true,              # shortens units, eg kiB->k, GiB->G
        }
    }

    # TODO: fix if condition
    # show cpu percents/bars + thresholds
    conky cpu {
        format = '[\?if=cpu.cpu0>90.0 [' # 60.0 == 6%???
        format += 'CPU '
        format += '[\?color=cpu.cpu0 {cpu cpu0} ]'
        format += '[\?color=cpu.cpu1 {cpu cpu1} ]'
        format += '[\?color=cpu.cpu2 {cpu cpu2} ]'
        format += '[\?color=cpu.cpu3 {cpu cpu3} ]'
        format += '%]'
        format += '|]'
        thresholds = [
            (0, 'good'), (50, 'yellow'),
            (75, 'orange'), (85, 'bad')
        ]
        min_width = 17
        #config
        config = {
            'update_interval': 3,             # update interval for conky
        }
    }

    # display load averages
    conky loadavg {
        format = '[\?if=loadavg.3>4.0 ['
        format += '[\?color=loadavg.1 {loadavg 1} ]'
        format += '[\?color=loadavg.2 {loadavg 2} ]'
        format += '[\?color=loadavg.3 {loadavg 3}]]'
        format += '|]'
        thresholds = [
            (0, 'good'), (4, 'yellow'),
            (5, 'orange'), (6, 'bad')
        ]
    }


    conky hwmonACPI {
        format = '[\?if=hwmon.0.temp.1>40 ['
        format += 'A: '
        format += '[\?color=hwmon.0.temp.1 {hwmon 0 temp 1} ]'
        format += '°C|]]'
        thresholds = [
            (0, 'good'), (40, 'yellow'),
            (80, 'orange'), (100, 'bad')
        ]
        #config
        config = {
            'update_interval': 3,             # update interval for conky
            'temperature_unit': 'celsius',
        }
    }

    conky hwmonCPU {
        format = '[\?if=hwmon.2.temp.1>50 ['
        format += 'C: '
        format += '[\?color=hwmon.2.temp.1 {hwmon 2 temp 1} ]'
        format += '°C|]]'
        thresholds = [
            (0, 'good'), (50, 'yellow'),
            (80, 'orange'), (100, 'bad')
        ]
        #config
        config = {
            'update_interval': 3,             # update interval for conky
            'temperature_unit': 'celsius',
        }
    }

    #conky hwmonGPU {
        #format = '[\?if=hwmon.1.temp.1>50 ['
        #format += 'G: '
        #format += '[\?color=hwmon.1.temp.1 {hwmon 1 temp 1} ]'
        #format += '°C|]]'
        #thresholds = [
            #(0, 'good'), (50, 'yellow'),
            #(80, 'orange'), (100, 'bad')
        #]
        #config = {
            #'update_interval': 3,             # update interval for conky
            #'temperature_unit': 'celsius',
        #}
    #}

}


# unuglify transition to colored
order += "static_string separator_beg_crypto"
static_string separator_beg_crypto { format = '\?color=standardcolor ' }

order += "group crypto"
group crypto {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '\?color=soundcolor {button}'
    background = 'standardcolor'
    group cryptoFRAMES {
        group cryptoCYCLE {
            background = 'standardcolor'
            format_separator = ' '
            coin_market USD {
                cache_timeout = 20
                format_coin = "[\?color=symbol {symbol}] ${price_usd:.1f} "
                format_coin += "[\?color=percent_change_24h {percent_change_24h}%]"
                markets = ["BTC", "ETH", "LTC", "EOS", "ZRX"]
                thresholds = {
                    "symbol": [
                        ("BTC", "greenyellow"),
                        ("ETH", "orange"),
                        ("LTC", "#00C2FF"),
                        ("EOS", "white"),
                        ("ZRX", "color_degraded"),
                    ],
                    "percent_change_24h": [(-100, "bad"), (0, "good"), (5, "greenyellow")],
                }
            }
            coin_market BTC {
                cache_timeout = 20
                format_coin = "[\?color=symbol {symbol}] Ƀ{price_btc:.3f} "
                format_coin += "[\?color=percent_change_24h {percent_change_24h}%]"
                markets = ["BTC", "ETH", "LTC", "EOS", "ZRX"]
                thresholds = {
                    "symbol": [
                        ("BTC", "greenyellow"),
                        ("ETH", "orange"),
                        ("LTC", "#00C2FF"),
                        ("EOS", "white"),
                        ("ZRX", "color_degraded"),
                    ],
                    "percent_change_24h": [(-100, "bad"), (0, "good"), (5, "greenyellow")],
                }
            }
        }
        # secondary frame, display top 10 markets
        frame cryptoTOP {
            coin_market TOP {
                cache_timeout = 20
                format_coin = "[\?color=rank {rank}. {symbol} ${price_usd:.0f}] "
                format_coin += "[\?color=percent_change_24h {percent_change_24h}%] "
                markets = 10
                thresholds = {
                    "rank": [
                        (1, "#d3d3d3"),
                        (2, "#bdbdbd"),
                        (3, "#a8a8a8"),
                        (4, "#939393"),
                        (5, "#7e7e7e"),
                        (6, "#696969"),
                        (7, "#545454"),
                        (8, "#3f3f3f"),
                        (9, "#545454"),
                        (10, "#696969"),
                    ],
                    "percent_change_24h": [(-100, "bad"), (0, "good"), (5, "greenyellow")],
                }
            }
        }
        # third frame, display top 10 markets cap
        frame cryptoTOPcap {
            coin_market TOPcap {
                cache_timeout = 20
                format_coin = "[\?color=rank {rank}. {symbol} M$]"
                format_coin += "[\?max_length=-6&trim=both {market_cap_usd:.0f}]"
                markets = 10
                thresholds = {
                    "rank": [
                        (1, "#d3d3d3"),
                        (2, "#bdbdbd"),
                        (3, "#a8a8a8"),
                        (4, "#939393"),
                        (5, "#7e7e7e"),
                        (6, "#696969"),
                        (7, "#545454"),
                        (8, "#3f3f3f"),
                        (9, "#545454"),
                        (10, "#696969"),
                    ],
                }
            }
        }

    }
}

# unuglify transition to colored
order += "static_string separator_end_crypto"
static_string separator_end_crypto { format = '\?color=standardcolor ' }

order += "group loss_alert"
group loss_alert {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '{button}'
    frame loss {
        frame blood_loss {
            background = 'blood'
            packet_loss min01 {
                cache_timeout = 1
                format_prefix = " 01: "
                time_slice = 1
                hide_if_zero = True
                host = "8.8.8.8"
                interval = 4
                packetsize = 8
            }
            packet_loss min10 {
                cache_timeout = 1
                format_prefix = " 10: "
                time_slice = 10
                hide_if_zero = True
                host = "8.8.8.8"
                interval = 4
                packetsize = 8
                thresholds = [
                    (0, "good"),
                    (3, "degraded"),
                    (6, "#ffa500"),
                    (9, "bad"),
                ]
            }
        }
        group long_loss {
            cycle = 1
            packet_loss hour01 {
                cache_timeout = 1
                format_prefix = " 01H: "
                format_postfix = ""
                time_slice = 60
                get_packet_loss = True
                hide_if_zero = False
                host = "8.8.8.8"
                interval = 4
                packetsize = 8
            }
            packet_loss hour24 {
                cache_timeout = 1
                format_prefix = " 24H: "
                format_postfix = ""
                time_slice = 1440
                get_packet_loss = True
                hide_if_zero = False
                host = "8.8.8.8"
                interval = 4
                packetsize = 8
            }
        }
    }
}

# unuglify transition to colored
order += "static_string separator_beg_network"
static_string separator_beg_network { format = '\?color=networkcolor ' }

order += "group network"
group network {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '\?color=standardcolor {button}'
    background = 'networkcolor'
    fixed_width = true
    # display down/up speed
    frame networkDU {
        transmission {
            format_torrent = '[\?if=status=Downloading '
            format_torrent += ' {down:.0f}K '
            format_torrent += '[\?not_zero U: {up}K ]'
            format_torrent += 'ETA:{eta} ]'
        }
        static_string D { format = ' D:' }
        conky networkD {
            min_width = 40
            align = 'center'
            format = '[{downspeed enp3s0}]'
            #config
            config = {
                'update_interval': 1,             # update interval for conky
                'format_human_readable': true,    # if False, print in bytes
                'short_units': true,              # shortens units, eg kiB->k, GiB->G
                'uppercase': true,                # upper placeholders
            }
        }
        static_string U { format = ' U:' }
        conky networkU {
            min_width = 40
            align = 'center'
            format = '[{upspeed enp3s0}]'
            #config
            config = {
                'update_interval': 1,             # update interval for conky
                'format_human_readable': true,    # if False, print in bytes
                'short_units': true,              # shortens units, eg kiB->k, GiB->G
                'uppercase': true,                # upper placeholders
            }
        }
    }
}


order += "group player"
group player {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '\?color=networkcolor {button}'
    background = 'playercolor'
    #fixed_width = true
    frame player {
        static_string separator_end_network { format = '\?color=networkcolor ' }
        group player_status {
            #fixed_width = true
            #cycle = 5
            mpd_status playing {
                align = "center"
                cache_timeout = 2
                format = '{state} [{artist} - {title}|{file}] \[{time}\]'
                state_play = ""
                state_pause = ""
                state_stop = ""
                hide_when_paused = true
            }
            mpd_status upnext {
                align = "center"
                cache_timeout = 10
                format = 'NEXT [{next_artist} - {next_title}|{next_file}]'
                hide_when_paused = true
            }
        }
    }
}

order += "group sound"
group sound {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '\?color=playercolor {button}'
    background = 'soundcolor'
    frame sound {
        static_string separator_end_player { format = '\?color=playercolor ' }
        #format_separator = ' '
        format_separator = '  '
        #external_script {
            #align = "left"
            #cache_timeout = 1
            #format = "{output}"
            #script_path = "~/.scripts/.temp/.toggle_mono_status.sh"
        #}
        volume_status {
            align = "center"
            min_width = 50
            cache_timeout = 1
            format = '[\?if=is_input | ]   {percentage}%'
            format_muted = '[\?if=is_input | ]  MUTE'
            device = "0"
            thresholds = [
                (0, "bad"), (50, "degraded"), (75, "good")
            ]
        }
        volume_status "M" {
            align = "center"
            min_width = 50
            cache_timeout = 1
            format = '[\?if=is_input | ]  {percentage}%'
            format_muted = '[\?if=is_input | ] MUTE'
            device = "3" # flag4sed M
            thresholds = [
                (0, "bad"), (50, "degraded"), (75, "good")
            ]
        }
    }
}

order += "group conkyITD"
group conkyITD {
    click_mode = "button"
    format_button_closed = '+'
    format_button_open = '-'
    format_closed = '\?color=soundcolor {button}'
    background = 'standardcolor'
    frame conkyITD {
        background = 'standardcolor'
        static_string separator_end_sound { format = '\?color=soundcolor ' }
        format_separator = ' '
        # show info stuff
        arch_updates {
            cache_timeout = 10800
            hide_if_zero = True
            format = ' {pacman}/{aur}'  # if include_aur is True
            #format = ' {pacman}'  # if include_aur is True
        }
        conky info {
            format = ''
            format += ' {uptime_short}'
            #config
            config = {
                'update_interval': 60,            # update interval for conky
            }
        }
        frame conkyDATE {
            conky time {
                format = "  "
                format += "{time %H}:"
                format += "{time %M}:"
                format += "{time %S} "
                #config
                config = {
                    'update_interval': 1,       # update interval for conky
                }
            }
            conky day {
                format = ""
                format += " {time %A} "
                format += "{time %d}."
                #config
                config = {
                    'update_interval': 3,       # update every 3 sec
                }
            }
            conky date {
                format = ""
                format += "{time %m}."
                format += "{time %Y} "
                format += "{time %j}"
                #config
                config = {
                    'update_interval': 600,     # update every 30 minutes
                }
            }
        }
    }
}

# unuglify transition to colored
order += "static_string separator_end_crypto"
static_string separator_end_conky { format = '\?color=standardcolor ' }

