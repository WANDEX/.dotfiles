#!/bin/sh
#/////////////////////////////////////////////////////////////////////////
#//////____////__////////______////____//////______//______//////______///
#///__////__//__//////////__////__////__//__////////__////__//__//////////
#//________//__//////////__////________////____////______////__///////////
#/__////__//__//////////__////__////__////////__//__////__//__////////////
#__////__//________//______//__////__//______////__////__////______///////
#/////////////////////////////////////////////////////////////////////////

# Use neovim for vim if present.
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"

# common
alias \
    chts="cht --shell" \
    gali="alias | grep -i" \
    kl="kill -9" \
    lld2="sudo du -ah --max-depth 2" \
    lld="sudo du -ah --max-depth 1" \
    llda="sudo du -ah" \
    nt="\$TERMINAL &>/dev/null & disown" \
    psg="ps -ef | head -1; ps -ef | grep" \
    psl="ps -ef --forest" \
    pst="pstree -p \$$" \
    smi="sudo make install" \
    smic="make clean && sudo make install" \
    sse="find \$SOURCE -not -path '*/\.*/*' -not -path '*/__*/*' -not -path '*/lib*/*' -type f \( ! -iname '.*' \) | fzf | xargs -r -I % \$EDITOR %" \
    ssp="source ~/.profile" \
    sudo="sudo " \
    sxlog="cat ~/.local/share/xorg/Xorg.0.log | \$PAGER" \
    sxrlog="cat /var/log/Xorg.0.log | \$PAGER" \
    trm="rm -vf ~/Downloads/torrents/*.torrent" \
    venv="source venv/bin/activate" \
    vf="fzf | xargs -r -I % \$EDITOR %"

# git
alias \
    ga="git add" \
    gc="git commit" \
    gca="git commit --amend" \
    gp="git push" \
    gs="git status" \
    gl="git log " \
    glf="git log --pretty=fuller " \
    glo="git log --pretty=oneline " \
    gls="git log --stat " \
    gg="--grep " \
    gall="--all-match " \
    ginv="--invert-grep " \
    gi="--regexp-ignore-case " \
    gaft="--after " \
    gbef="--before "

# python
alias \
    calc="python3 -ic 'from math import *'" \
    pd="python -m pydoc" \
    pe="python -me"
    # pe 'module_name' 'edit'/'view'. source:pypi.org/project/e/

# pacman
alias \
    pp="sudo pacman -S" \
    pu="sudo pacman -Syu" \
    au="paru -Sua" \
    pvf="pacman -Slq | fzf -m --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S"

# nvim
alias \
    neo="nvim " \
    neoc="nvim +PlugClean +qall" \
    neou="nvim +PlugClean +PlugInstall +PlugUpdate +UpdateRemotePlugins +qall" \
    neous="nvim +PlugClean +PlugInstall +PlugUpdate +UpdateRemotePlugins +qall > /dev/null" \
    glog="nvim -c Gclog" \
    magit="nvim -c MagitOnly"

# colorize commands when possible.
alias \
    grep="grep --color=auto" \
    ls="ls -hN --color=auto --group-directories-first" \
    la="ls -Fa --color=auto" \
    ll="ls_colored" \
    diff="diff --color=auto" \
    ccat="highlight --out-format=ansi"

# command replacement (fix)
alias \
    cp="cp -vi" \
    rm="rm -vi" \
    mv="mv -vi" \
    mpdscribble="mpdscribble --conf ~/.config/mpdscribble/mpdscribble.conf" \
    tor="tor --DataDirectory $XDG_DATA_HOME/tor" \
    wget="wget --hsts-file=$XDG_CACHE_HOME/wget-hsts"

# rlwrap (fix) to support arrow keys and command line history
alias \
    pomodoro="rlwrap pomodoro"

# get random_image and set as wallpaper
alias \
    rwd="random_image | setbg" \
    rwc="random_image ~/Wallpapers/cyberpunk/ | setbg" \
    rwi="random_image ~/Wallpapers/IlyaKuvshinov/ | setbg" \
    rwk="random_image ~/Wallpapers/KuldarLeement/ | setbg" \
    rwt="random_image ~/Wallpapers/tnn/ | setbg" \
    rwh="random_image ~/Wallpapers/hnt/ | setbg"

#---- PIP ----#
alias pip-l="pip3 freeze | \$PAGER"
alias pip-s="pip3 freeze | grep -i"
alias pip-r="pip3 uninstall"
alias pip-i="pip3 install --ignore-installed --user --upgrade"
alias pip-u-all="pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1|xargs -n1 pip3 install --user --upgrade"

#----- PIP FOR VENV -----#
alias pip-list="pip freeze | less"
alias pip-search="pip freeze | grep -i"
alias pip-remove="pip uninstall"
alias pip-install="pip install -U"
alias pip-upgrade-all="pip freeze --local | grep -v '^\-e' | cut -d = -f 1|xargs -n1 pip install -U"
alias pip-req="pip freeze > requirements.txt"
