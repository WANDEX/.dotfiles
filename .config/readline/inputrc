## man readline
## MEMO:
## * to see all key bindings:
## * 'bind -P' or 'bind -p'
## * "\C-x\C-r": re-read-init-file || or
## * 'bind -f ~/.config/readline/inputrc'
##
## after unbind restart of bash required,
## so this is the perfect candidate for reloading:
## 'exec bash -l'
##
## useful resources:
## 'https://unix.stackexchange.com/questions/303479/what-are-readlines-modes-keymaps-and-their-default-bindings'
## 'https://unix.stackexchange.com/questions/374441/unbind-default-key-from-inputrc'
## 'https://orelfichman.com/blog/terminal-escape-codes-are-awesome'
## 'https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797'
## 'https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Special-Keyboard-Keys'

$include /etc/inputrc

set bell-style none

set editing-mode vi
set show-mode-in-prompt on
## search for DECSCUSR in: 'https://invisible-island.net/xterm/ctlseqs/ctlseqs.html'
## FIXME: if cursor at the leftmost column (at the border of terminal screen),
## changing modes introduces visual artifact, find a way to fix this.
## artifact: overdraws already present text by the '6,2,4' characters!
set vi-ins-mode-string "\1\e[6 q\2"
set vi-cmd-mode-string "\1\e[2 q\2"
set  emacs-mode-string "\1\e[4 q\2"
## the same as: '\001\033 q\002' with the cursor style in between (num: 0-6).
## terminal must support DECSCUSR (st, xterm, urxvt, iTerm2, etc.) tmux with (TERM=xterm-256color).

## fix for Delete not working properly, arrow-keys...
set enable-keypad on

## colored completions
set colored-completion-prefix on
set colored-stats on

## these already colored, so no need in another visual clue
set visible-stats off

## display all possible matches for an ambiguous pattern at first complete (TAB)
set show-all-if-ambiguous on

set enable-bracketed-paste on

## DOUBTS: not sure that this is a good idea...
## "to ignore special characters: 'stty -a' these?"
# set bind-tty-special-chars off


## *** (UN)BIND VI-INSERT BEG ***
## bind/unbind after this line, because keymap matters!
set keymap vi-insert
$include ~/.config/readline/vi-common-unbind

## leave insert mode (go to vi-move mode)
"\C-l": vi-movement-mode

## for terminals TAB & C-I is the same, so C-I inevitable does the same thing. :(
TAB: complete

$include ~/.config/readline/vi-common-bind
## *** (UN)BIND VI-INSERT END ***


## *** (UN)BIND VI-MOVE BEG ***
## bind/unbind after this line, because keymap matters!
set keymap vi-move
$include ~/.config/readline/vi-common-unbind

## emacs-editing-mode
"\C-E":

## abort
"\C-G":

## vi-end-word
"e":
"E":

## vi-insertion-mode
"i":
## forward-char
"l":

## next-history/prev-history,
"j":
"k":

## leave move/command mode (go to vi-insert mode)
"\C-l": vi-insertion-mode

"l": vi-end-word
"L": vi-end-word

"k": vi-insertion-mode
"i": forward-char

## XXX not very useful, feel free to rebind those keys for the other purpose.
"n": next-screen-line
"e": previous-screen-line

$include ~/.config/readline/vi-common-bind
## *** (UN)BIND VI-MOVE END ***

## (seems like that this not gives performance penalty.)
## I do not need an emacs mode. But why not...
set keymap emacs
"\eq": vi-editing-mode
$include ~/.config/readline/vi-common-unbind
$include ~/.config/readline/vi-common-bind
set keymap vi-move
"\eq": emacs-editing-mode
set keymap vi-insert
"\eq": emacs-editing-mode
